{"ast":null,"code":"var _jsxFileName = \"D:\\\\ReactJs\\\\geektrust\\\\admin-ui\\\\src\\\\components\\\\UserData\\\\UserData.js\",\n    _s = $RefreshSig$();\n\nimport SpecificUserData from '../SpecificUserData/SpecificUserData';\nimport React, { useEffect, useState } from 'react'; // import style from './UserData.module.css';\n\nimport './UserData.css';\nimport { AiFillCaretLeft, AiFillCaretRight } from \"react-icons/ai\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction UserData(props) {\n  _s();\n\n  const [pages] = useState(Math.round(props.items.length / props.dataLimit));\n  const [currentPage, setCurrentPage] = useState(1);\n  const [selectedId, setSelectedId] = useState([]);\n\n  const insertIdData = id => {\n    setSelectedId([...selectedId, id]);\n  };\n\n  const onDeleteSelected = () => {\n    props.selectedDeleteHandler(selectedId);\n  };\n\n  const goToNextPage = () => {\n    setCurrentPage(page => page + 1);\n  };\n\n  const goToPreviousPage = () => {\n    setCurrentPage(page => page >= 1 ? page - 1 : page = 1);\n  };\n\n  const changePage = event => {\n    const pageNumber = Number(event.target.textContent);\n    setCurrentPage(pageNumber);\n  };\n\n  const getPaginatedData = () => {\n    const startIndex = currentPage * props.dataLimit - props.dataLimit;\n    const endIndex = startIndex + props.dataLimit;\n    return props.items.slice(startIndex, endIndex);\n  };\n\n  const getPaginationGroup = () => {\n    if (currentPage + 4 >= 5) {\n      let start = Math.floor((currentPage - 1) / props.pageLimit) * props.pageLimit;\n      return new Array(props.pageLimit).fill().map((_, idx) => start + idx + 1);\n    }\n\n    return new Array(props.pageLimit).fill().map((_, idx) => 1 + idx + 1);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"table-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Role\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), getPaginatedData().map(user => /*#__PURE__*/_jsxDEV(SpecificUserData, {\n        id: user.id,\n        name: user.name,\n        email: user.email,\n        role: user.role,\n        deleteSpecificUser: props.ondeleteHandler,\n        insertCheckedId: insertIdData\n      }, user.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"deleteButton\",\n      onClick: onDeleteSelected,\n      children: \"Delete Selected\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pagination\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: changePage,\n        className: `prev ${currentPage === 1 ? 'disabled' : ''}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: goToPreviousPage,\n        className: `prev ${currentPage === 1 ? 'disabled' : ''}`,\n        children: /*#__PURE__*/_jsxDEV(AiFillCaretLeft, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), getPaginationGroup().map((item, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: changePage,\n        className: `paginationItem ${currentPage === item ? 'active' : null}`,\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: item\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 25\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 21\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        AiFillCaretRight: true,\n        onClick: goToNextPage,\n        className: `next ${currentPage === pages ? 'disabled' : ''}`,\n        children: /*#__PURE__*/_jsxDEV(AiFillCaretRight, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n}\n\n_s(UserData, \"zK/B6DmVsxaW/638hoEAJF4vjTY=\");\n\n_c = UserData;\nexport default UserData;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserData\");","map":{"version":3,"sources":["D:/ReactJs/geektrust/admin-ui/src/components/UserData/UserData.js"],"names":["SpecificUserData","React","useEffect","useState","AiFillCaretLeft","AiFillCaretRight","UserData","props","pages","Math","round","items","length","dataLimit","currentPage","setCurrentPage","selectedId","setSelectedId","insertIdData","id","onDeleteSelected","selectedDeleteHandler","goToNextPage","page","goToPreviousPage","changePage","event","pageNumber","Number","target","textContent","getPaginatedData","startIndex","endIndex","slice","getPaginationGroup","start","floor","pageLimit","Array","fill","map","_","idx","user","name","email","role","ondeleteHandler","item","index"],"mappings":"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","sourcesContent":["import SpecificUserData from '../SpecificUserData/SpecificUserData';\r\nimport React, { useEffect, useState } from 'react';\r\n// import style from './UserData.module.css';\r\nimport './UserData.css';\r\nimport { AiFillCaretLeft, AiFillCaretRight } from \"react-icons/ai\";\r\n\r\n\r\nfunction UserData(props) {\r\n\r\n    const [pages] = useState(Math.round(props.items.length / props.dataLimit));\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [selectedId, setSelectedId] = useState([]);\r\n\r\n    const insertIdData = (id) => {\r\n        setSelectedId([...selectedId, id]);\r\n    }\r\n\r\n    const onDeleteSelected = () => {\r\n        props.selectedDeleteHandler(selectedId);\r\n    }\r\n\r\n    const goToNextPage = () => {\r\n        setCurrentPage((page) => page + 1);\r\n    }\r\n\r\n    const goToPreviousPage = () => {\r\n\r\n        setCurrentPage((page) => page >= 1 ? page - 1 : page = 1);\r\n    }\r\n\r\n    const changePage = (event) => {\r\n        const pageNumber = Number(event.target.textContent);\r\n        setCurrentPage(pageNumber);\r\n    }\r\n\r\n    const getPaginatedData = () => {\r\n        const startIndex = currentPage * props.dataLimit - props.dataLimit;\r\n        const endIndex = startIndex + props.dataLimit;\r\n        return props.items.slice(startIndex, endIndex);\r\n    };\r\n\r\n    const getPaginationGroup = () => {\r\n        if (currentPage + 4 >= 5) {\r\n            let start = Math.floor((currentPage - 1) / props.pageLimit) * props.pageLimit;\r\n            return new Array(props.pageLimit).fill().map((_, idx) => start + idx + 1);\r\n        }\r\n        return new Array(props.pageLimit).fill().map((_, idx) => 1 + idx + 1);\r\n    };\r\n\r\n    return (\r\n        <div className='table-container'>\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        <th><input type='checkbox' /></th>\r\n                        <th>Name</th>\r\n                        <th>Email</th>\r\n                        <th>Role</th>\r\n                        <th></th>\r\n                        <th></th>\r\n\r\n                    </tr>\r\n                </thead>\r\n                {getPaginatedData().map((user) => (\r\n                    <SpecificUserData\r\n                        key={user.id}\r\n                        id={user.id}\r\n                        name={user.name}\r\n                        email={user.email}\r\n                        role={user.role}\r\n                        deleteSpecificUser={props.ondeleteHandler}\r\n                        insertCheckedId={insertIdData}\r\n                    />\r\n\r\n                ))}\r\n\r\n            </table>\r\n            <button\r\n                className='deleteButton'\r\n                onClick={onDeleteSelected}\r\n            >\r\n                Delete Selected\r\n            </button>\r\n\r\n            <div className='pagination'>\r\n                <button\r\n                    onClick={changePage}\r\n                    className={`prev ${currentPage === 1 ? 'disabled' : ''}`}\r\n                >\r\n\r\n                </button>\r\n                {/* previous button */}\r\n                <button\r\n                    onClick={goToPreviousPage}\r\n                    className={`prev ${currentPage === 1 ? 'disabled' : ''}`}\r\n                >\r\n                    <AiFillCaretLeft />\r\n                </button>\r\n\r\n                {/* show page numbers */}\r\n                {getPaginationGroup().map((item, index) => (\r\n                    <button\r\n                        key={index}\r\n                        onClick={changePage}\r\n                        className={`paginationItem ${currentPage === item ? 'active' : null}`}\r\n                    >\r\n                        <span>{item}</span>\r\n                    </button>\r\n                ))}\r\n\r\n                {/* next button */}\r\n                <button\r\n                    AiFillCaretRight\r\n                    onClick={goToNextPage}\r\n                    className={`next ${currentPage === pages ? 'disabled' : ''}`}\r\n                >\r\n                    <AiFillCaretRight />\r\n                </button>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default UserData;"]},"metadata":{},"sourceType":"module"}