{"ast":null,"code":"var _jsxFileName = \"D:\\\\ReactJs\\\\geektrust\\\\admin-ui\\\\src\\\\components\\\\Pagination\\\\Pagination.js\",\n    _s = $RefreshSig$();\n\nimport style from './Pagination.module.css';\nimport React, { useEffect, useState } from 'react';\nimport SpecificUSerData from '../SpecificUserData/SpecificUserData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Pagination = (_ref, props) => {\n  _s();\n\n  let {\n    data,\n    RenderComponent,\n    pageLimit,\n    dataLimit\n  } = _ref;\n  const [pages] = useState(Math.round(data.length / dataLimit));\n  const [currentPage, setCurrentPage] = useState(1);\n\n  function goToNextPage() {\n    setCurrentPage(page => page + 1);\n  }\n\n  function goToPreviousPage() {\n    setCurrentPage(page => page - 1);\n  }\n\n  function changePage(event) {\n    const pageNumber = Number(event.target.textContent);\n    setCurrentPage(pageNumber);\n  }\n\n  const getPaginatedData = () => {\n    const startIndex = currentPage * dataLimit - dataLimit;\n    const endIndex = startIndex + dataLimit;\n    return data.slice(startIndex, endIndex);\n  };\n\n  const getPaginationGroup = () => {\n    let start = Math.floor((currentPage - 1) / pageLimit) * pageLimit;\n    return new Array(pageLimit).fill().map((_, idx) => start + idx + 1);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [getPaginatedData().map(d => /*#__PURE__*/_jsxDEV(SpecificUSerData, {\n      id: d.id,\n      name: d.name,\n      email: d.email,\n      role: d.role,\n      deleteSpecificUser: props.ondeleteHandler\n    }, d.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.pagination,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: goToPreviousPage,\n        className: `{{style.prev}} ${currentPage === 1 ? 'disabled' : ''}`,\n        children: \"prev\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), getPaginationGroup().map((item, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: changePage,\n        className: `{{style.paginationItem}} ${currentPage === item ? 'active' : null}`,\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: item\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 25\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: goToNextPage,\n        className: `{{style.next}} ${currentPage === pages ? 'disabled' : ''}`,\n        children: \"next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Pagination, \"TAuAHIRT/chsJ5y/NrRj9/numrE=\");\n\n_c = Pagination;\nexport default Pagination;\n\nvar _c;\n\n$RefreshReg$(_c, \"Pagination\");","map":{"version":3,"sources":["D:/ReactJs/geektrust/admin-ui/src/components/Pagination/Pagination.js"],"names":["style","React","useEffect","useState","SpecificUSerData","Pagination","props","data","RenderComponent","pageLimit","dataLimit","pages","Math","round","length","currentPage","setCurrentPage","goToNextPage","page","goToPreviousPage","changePage","event","pageNumber","Number","target","textContent","getPaginatedData","startIndex","endIndex","slice","getPaginationGroup","start","floor","Array","fill","map","_","idx","d","id","name","email","role","ondeleteHandler","pagination","item","index"],"mappings":"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","sourcesContent":["import style from './Pagination.module.css';\r\nimport React, { useEffect, useState } from 'react';\r\nimport SpecificUSerData from '../SpecificUserData/SpecificUserData';\r\n\r\nconst Pagination = ({ data, RenderComponent, pageLimit, dataLimit }, props) => {\r\n    const [pages] = useState(Math.round(data.length / dataLimit));\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n\r\n    function goToNextPage() {\r\n        setCurrentPage((page) => page + 1);\r\n    }\r\n\r\n    function goToPreviousPage() {\r\n        setCurrentPage((page) => page - 1);\r\n    }\r\n\r\n    function changePage(event) {\r\n        const pageNumber = Number(event.target.textContent);\r\n        setCurrentPage(pageNumber);\r\n    }\r\n\r\n    const getPaginatedData = () => {\r\n        const startIndex = currentPage * dataLimit - dataLimit;\r\n        const endIndex = startIndex + dataLimit;\r\n        return data.slice(startIndex, endIndex);\r\n    };\r\n\r\n    const getPaginationGroup = () => {\r\n        let start = Math.floor((currentPage - 1) / pageLimit) * pageLimit;\r\n        return new Array(pageLimit).fill().map((_, idx) => start + idx + 1);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n\r\n\r\n            {getPaginatedData().map((d) => (\r\n                <SpecificUSerData\r\n                    key={d.id}\r\n                    id={d.id}\r\n                    name={d.name}\r\n                    email={d.email}\r\n                    role={d.role}\r\n                    deleteSpecificUser={props.ondeleteHandler} />\r\n            ))}\r\n\r\n\r\n            <div className={style.pagination}>\r\n                {/* previous button */}\r\n                <button\r\n                    onClick={goToPreviousPage}\r\n                    className={`{{style.prev}} ${currentPage === 1 ? 'disabled' : ''}`}\r\n                >\r\n                    prev\r\n                </button>\r\n\r\n                {/* show page numbers */}\r\n                {getPaginationGroup().map((item, index) => (\r\n                    <button\r\n                        key={index}\r\n                        onClick={changePage}\r\n                        className={`{{style.paginationItem}} ${currentPage === item ? 'active' : null}`}\r\n                    >\r\n                        <span>{item}</span>\r\n                    </button>\r\n                ))}\r\n\r\n                {/* next button */}\r\n                <button\r\n                    onClick={goToNextPage}\r\n                    className={`{{style.next}} ${currentPage === pages ? 'disabled' : ''}`}\r\n                >\r\n                    next\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Pagination;"]},"metadata":{},"sourceType":"module"}