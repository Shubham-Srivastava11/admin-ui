{"ast":null,"code":"var _jsxFileName = \"D:\\\\ReactJs\\\\geektrust\\\\admin-ui\\\\src\\\\components\\\\UserData\\\\UserData.js\",\n    _s = $RefreshSig$();\n\nimport SpecificUserData from '../SpecificUserData/SpecificUserData';\nimport React, { useState } from 'react'; // import style from './UserData.module.css';\n\nimport './UserData.css'; // import { AiFillCaretLeft, AiFillCaretRight, AiFillFastBackward, AiFillFastForward } from \"react-icons/ai\";\n\nimport Pagination from '../Pagination/Pagination';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction UserData(props) {\n  _s();\n\n  const [pages] = useState(Math.round(props.items.length / props.dataLimit));\n  const [fixedPagesCount] = useState(Math.round(props.items.length / props.dataLimit)); // setFixedPagesCount(Math.round(props.items.length / props.dataLimit));\n  // console.log(fixedPagesCount);\n\n  const [currentPage, setCurrentPage] = useState(1);\n  const [selectedId, setSelectedId] = useState([]);\n\n  const insertIdData = id => {\n    setSelectedId([...selectedId, id]);\n  };\n\n  const onDeleteSelected = () => {\n    props.selectedDeleteHandler(selectedId);\n  };\n\n  const goToNextPage = () => {\n    // console.log(Math.round(props.items.length / props.dataLimit))\n    console.log(fixedPagesCount);\n    setCurrentPage(page => page >= pages ? page : page + 1);\n  };\n\n  const goToPreviousPage = () => {\n    setCurrentPage(page => page >= 1 ? page - 1 : page = 1);\n  };\n\n  const changePage = event => {\n    if (event.target.textContent === 'First') {\n      const pageNumber = 1;\n      setCurrentPage(pageNumber);\n    } else if (event.target.textContent === 'Last') {\n      const pageNumber = fixedPagesCount;\n      setCurrentPage(pageNumber);\n    } else {\n      const pageNumber = Number(event.target.textContent);\n      setCurrentPage(pageNumber);\n    }\n  };\n\n  const getPaginatedData = () => {\n    const startIndex = currentPage * props.dataLimit - props.dataLimit;\n    const endIndex = startIndex + props.dataLimit;\n    return props.items.slice(startIndex, endIndex);\n  };\n\n  const getPaginationGroup = () => {\n    if (currentPage + 4 >= 5) {\n      let start = Math.floor((currentPage - 1) / props.pageLimit) * props.pageLimit;\n      return new Array(props.pageLimit).fill().map((_, idx) => start + idx + 1);\n    }\n\n    return new Array(props.pageLimit).fill().map((_, idx) => 1 + idx + 1);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"table-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Role\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), getPaginatedData().map(user => /*#__PURE__*/_jsxDEV(SpecificUserData, {\n        id: user.id,\n        name: user.name,\n        email: user.email,\n        role: user.role,\n        deleteSpecificUser: props.ondeleteHandler,\n        insertCheckedId: insertIdData\n      }, user.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"deleteButton\",\n      onClick: onDeleteSelected,\n      children: \"Delete Selected\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n      changePage: changePage,\n      goToPreviousPage: goToPreviousPage,\n      goToNextPage: goToNextPage,\n      pages: pages,\n      currentPage: currentPage,\n      pageLimit: props.pageLimit,\n      fixedLength: fixedPagesCount\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n}\n\n_s(UserData, \"DHEoIk7DeSFEHW49DmzJOvoBikQ=\");\n\n_c = UserData;\nexport default UserData;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserData\");","map":{"version":3,"sources":["D:/ReactJs/geektrust/admin-ui/src/components/UserData/UserData.js"],"names":["SpecificUserData","React","useState","Pagination","UserData","props","pages","Math","round","items","length","dataLimit","fixedPagesCount","currentPage","setCurrentPage","selectedId","setSelectedId","insertIdData","id","onDeleteSelected","selectedDeleteHandler","goToNextPage","console","log","page","goToPreviousPage","changePage","event","target","textContent","pageNumber","Number","getPaginatedData","startIndex","endIndex","slice","getPaginationGroup","start","floor","pageLimit","Array","fill","map","_","idx","user","name","email","role","ondeleteHandler"],"mappings":"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","sourcesContent":["import SpecificUserData from '../SpecificUserData/SpecificUserData';\r\nimport React, { useState } from 'react';\r\n// import style from './UserData.module.css';\r\nimport './UserData.css';\r\n// import { AiFillCaretLeft, AiFillCaretRight, AiFillFastBackward, AiFillFastForward } from \"react-icons/ai\";\r\nimport Pagination from '../Pagination/Pagination';\r\n\r\n\r\nfunction UserData(props) {\r\n\r\n    const [pages] = useState(Math.round(props.items.length / props.dataLimit));\r\n    const [fixedPagesCount] = useState(Math.round(props.items.length / props.dataLimit));\r\n    // setFixedPagesCount(Math.round(props.items.length / props.dataLimit));\r\n    // console.log(fixedPagesCount);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [selectedId, setSelectedId] = useState([]);\r\n\r\n    const insertIdData = (id) => {\r\n        setSelectedId([...selectedId, id]);\r\n    }\r\n\r\n    const onDeleteSelected = () => {\r\n        props.selectedDeleteHandler(selectedId);\r\n    }\r\n\r\n    const goToNextPage = () => {\r\n        // console.log(Math.round(props.items.length / props.dataLimit))\r\n        console.log(fixedPagesCount)\r\n\r\n        setCurrentPage((page) => page >= pages ? page : page + 1);\r\n    }\r\n\r\n    const goToPreviousPage = () => {\r\n\r\n        setCurrentPage((page) => page >= 1 ? page - 1 : page = 1);\r\n    }\r\n\r\n    const changePage = (event) => {\r\n        if (event.target.textContent === 'First') {\r\n            const pageNumber = 1;\r\n            setCurrentPage(pageNumber);\r\n        } else if (event.target.textContent === 'Last') {\r\n            const pageNumber = fixedPagesCount;\r\n            setCurrentPage(pageNumber);\r\n        } else {\r\n\r\n            const pageNumber = Number(event.target.textContent);\r\n            setCurrentPage(pageNumber);\r\n        }\r\n    }\r\n\r\n    const getPaginatedData = () => {\r\n        const startIndex = currentPage * props.dataLimit - props.dataLimit;\r\n        const endIndex = startIndex + props.dataLimit;\r\n        return props.items.slice(startIndex, endIndex);\r\n    };\r\n\r\n    const getPaginationGroup = () => {\r\n        if (currentPage + 4 >= 5) {\r\n            let start = Math.floor((currentPage - 1) / props.pageLimit) * props.pageLimit;\r\n            return new Array(props.pageLimit).fill().map((_, idx) => start + idx + 1);\r\n        }\r\n        return new Array(props.pageLimit).fill().map((_, idx) => 1 + idx + 1);\r\n    };\r\n\r\n    return (\r\n        <div className='table-container'>\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        <th><input type='checkbox' /></th>\r\n                        <th>Name</th>\r\n                        <th>Email</th>\r\n                        <th>Role</th>\r\n                        <th></th>\r\n                        <th></th>\r\n\r\n                    </tr>\r\n                </thead>\r\n                {getPaginatedData().map((user) => (\r\n                    <SpecificUserData\r\n                        key={user.id}\r\n                        id={user.id}\r\n                        name={user.name}\r\n                        email={user.email}\r\n                        role={user.role}\r\n                        deleteSpecificUser={props.ondeleteHandler}\r\n                        insertCheckedId={insertIdData}\r\n\r\n                    />\r\n\r\n                ))}\r\n\r\n            </table>\r\n            <button\r\n                className='deleteButton'\r\n                onClick={onDeleteSelected}>\r\n                Delete Selected\r\n            </button>\r\n\r\n            <Pagination\r\n                changePage={changePage}\r\n                goToPreviousPage={goToPreviousPage}\r\n                goToNextPage={goToNextPage}\r\n                pages={pages}\r\n                currentPage={currentPage}\r\n                pageLimit={props.pageLimit}\r\n                fixedLength={fixedPagesCount} />\r\n\r\n\r\n\r\n\r\n\r\n            {/* \r\n            <div className='pagination'>\r\n              \r\n                <button\r\n                    onClick={changePage}\r\n                    className={`prev ${currentPage === 1 ? 'disabled' : ''}`}\r\n                >\r\n                    First\r\n                </button>\r\n                \r\n                <button\r\n\r\n                    onClick={goToPreviousPage}\r\n                    className={`prev ${currentPage === 1 ? 'disabled' : ''}`}\r\n                >\r\n                    Prev\r\n                </button>\r\n\r\n               \r\n                {getPaginationGroup().map((item, index) => (\r\n                    <button\r\n                        key={index}\r\n                        onClick={changePage}\r\n                        className={`paginationItem ${currentPage === item ? 'active' : null}`}\r\n                    >\r\n                        <span>{item}</span>\r\n                    </button>\r\n                ))}\r\n\r\n               \r\n                <button\r\n\r\n                    onClick={goToNextPage}\r\n                    className={`next ${currentPage === pages ? 'disabled' : ''}`}\r\n                >\r\n                    Next\r\n                </button>\r\n\r\n               \r\n                <button\r\n                    onClick={changePage}\r\n                    className={`prev ${currentPage === pages ? 'disabled' : ''}`}\r\n                >\r\n                    Last\r\n                </button>\r\n            </div> */}\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default UserData;"]},"metadata":{},"sourceType":"module"}