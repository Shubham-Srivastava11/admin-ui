{"ast":null,"code":"var _jsxFileName = \"D:\\\\ReactJs\\\\geektrust\\\\admin-ui\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport UserData from './components/UserData/UserData';\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios'; // import Pagination from './components/Pagination/Pagination';\n// import SpecificUSerData from './components/SpecificUserData/SpecificUserData';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  let URL = 'https://geektrust.s3-ap-southeast-1.amazonaws.com/adminui-problem/members.json';\n  const [fetchedData, setUserDetails] = useState([]);\n  const [mainApiData, setApiData] = useState([]);\n  const [error, setError] = useState('');\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const fetchData = () => {\n    axios.get(URL).then(res => {\n      console.log(res);\n      if (res.statusText === 'OK') return res.json();\n      throw new Error('something went wrong while requesting posts');\n    }).then(response => {\n      // console.log(response);\n      setUserDetails(response);\n      setApiData(response);\n    }).catch(error => setError(error.message));\n  };\n\n  const deleteHandler = id => {\n    const val = fetchedData.filter(item => item.id !== id);\n    setApiData(val);\n    setUserDetails(val);\n  };\n\n  const editedDataHandler = data => {\n    console.log(data);\n    const objIndex = mainApiData.findIndex(obj => obj.id === data[0]);\n    mainApiData[objIndex].name = data[1];\n    mainApiData[objIndex].email = data[2];\n    mainApiData[objIndex].role = data[3];\n    setUserDetails(mainApiData);\n  };\n\n  const onSelectedDeleteHandler = idList => {\n    // console.log(idList);\n    if (idList.length === 0) {\n      alert('Please Select atleast 1 row.');\n    } else {\n      var afterDeleteList = fetchedData;\n\n      for (let id of idList) {\n        const val = afterDeleteList.filter(item => item.id !== id);\n        afterDeleteList = val; // console.log(afterDeleteList)\n      }\n\n      setUserDetails(afterDeleteList);\n      setApiData(afterDeleteList);\n    }\n  };\n\n  const filterUser = event => {\n    if (event.target.value.length === 0) {\n      // fetchData();\n      setUserDetails(mainApiData); // setApiData(mainApiData);\n    } else {\n      const filter = mainApiData.filter(item => item.name.toLowerCase().includes(event.target.value.toLowerCase()) || item.email.toLowerCase().includes(event.target.value.toLowerCase()) || item.role.toLowerCase().includes(event.target.value.toLowerCase()));\n      setUserDetails(filter);\n    }\n  };\n\n  if (error) return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      className: \"searchBox\",\n      placeholder: \"Search by name, email or role\",\n      onChange: filterUser\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(UserData, {\n      items: fetchedData,\n      ondeleteHandler: deleteHandler,\n      pageLimit: 5,\n      dataLimit: 10,\n      selectedDeleteHandler: onSelectedDeleteHandler,\n      editedData: editedDataHandler\n    }, Math.random(), false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), fetchedData.length === 0 && /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"No Record Found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 36\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"nUPyB/gijEdMBoAJcyFLga2hAc0=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/ReactJs/geektrust/admin-ui/src/App.js"],"names":["UserData","React","useEffect","useState","axios","App","URL","fetchedData","setUserDetails","mainApiData","setApiData","error","setError","fetchData","get","then","res","console","log","statusText","json","Error","response","catch","message","deleteHandler","id","val","filter","item","editedDataHandler","data","objIndex","findIndex","obj","name","email","role","onSelectedDeleteHandler","idList","length","alert","afterDeleteList","filterUser","event","target","value","toLowerCase","includes","Math","random"],"mappings":"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","sourcesContent":["import UserData from './components/UserData/UserData';\n\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\n// import Pagination from './components/Pagination/Pagination';\n// import SpecificUSerData from './components/SpecificUserData/SpecificUserData';\n\nfunction App() {\n\n\n  let URL = 'https://geektrust.s3-ap-southeast-1.amazonaws.com/adminui-problem/members.json';\n\n\n  const [fetchedData, setUserDetails] = useState([]);\n  const [mainApiData, setApiData] = useState([]);\n  const [error, setError] = useState('');\n\n\n  useEffect(() => {\n    fetchData()\n  }, [])\n\n  const fetchData = () => {\n    axios.get(URL)\n      .then((res) => {\n        console.log(res);\n        if (res.statusText === 'OK') return res.json();\n        throw new Error('something went wrong while requesting posts');\n      })\n      .then((response) => {\n        // console.log(response);\n        setUserDetails(response);\n        setApiData(response);\n      })\n      .catch((error) => setError(error.message));\n\n  }\n\n  const deleteHandler = (id) => {\n    const val = fetchedData.filter((item) => item.id !== id);\n\n    setApiData(val);\n    setUserDetails(val);\n  }\n\n  const editedDataHandler = (data) => {\n    console.log(data);\n    const objIndex = mainApiData.findIndex((obj => obj.id === data[0]));\n    mainApiData[objIndex].name = data[1];\n    mainApiData[objIndex].email = data[2];\n    mainApiData[objIndex].role = data[3];\n\n    setUserDetails(mainApiData);\n  }\n\n  const onSelectedDeleteHandler = (idList) => {\n    // console.log(idList);\n    if (idList.length === 0) {\n      alert('Please Select atleast 1 row.')\n    } else {\n      var afterDeleteList = fetchedData;\n      for (let id of idList) {\n\n        const val = afterDeleteList.filter((item) =>\n          item.id !== id\n        );\n\n        afterDeleteList = val;\n        // console.log(afterDeleteList)\n      }\n      setUserDetails(afterDeleteList);\n\n      setApiData(afterDeleteList);\n    }\n  }\n\n  const filterUser = (event) => {\n\n    if (event.target.value.length === 0) {\n      // fetchData();\n      setUserDetails(mainApiData);\n      // setApiData(mainApiData);\n    } else {\n\n      const filter = mainApiData.filter(item => (\n        item.name.toLowerCase().includes(event.target.value.toLowerCase()) ||\n        item.email.toLowerCase().includes(event.target.value.toLowerCase()) ||\n        item.role.toLowerCase().includes(event.target.value.toLowerCase())\n      ));\n      setUserDetails(filter);\n    }\n  }\n\n  if (error) return <h1>{error}</h1>;\n\n  return (\n    <React.Fragment>\n      <input\n        type='text'\n        className='searchBox'\n        placeholder=\"Search by name, email or role\"\n        onChange={filterUser}\n      />\n\n      <UserData\n        key={Math.random()}\n        items={fetchedData}\n        ondeleteHandler={deleteHandler}\n        pageLimit={5}\n        dataLimit={10}\n        selectedDeleteHandler={onSelectedDeleteHandler}\n        editedData={editedDataHandler} >\n      </UserData>\n\n      {fetchedData.length === 0 && <h2 >No Record Found</h2>}\n\n\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}